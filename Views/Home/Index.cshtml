@{
    //ViewData["Title"] = "Home Page";
    List<string> countries = ViewBag.countries;
}

<div style="position:absolute; top:70px; left:0; right:0; bottom:0; width:100%;">
    <div id="container" style="width:100%; height:100%; background:#f0f0f0"></div>
</div>
<div class="chart_options">
    <div class="form_element">
        <select id="bnFilterScale">
            <optgroup label="Scale Type">
                <option value="linear">Linear</option>
                <option value="logarithmic">Logarithmic</option>
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnFilterCountry" data-live-search="true">
            <optgroup label="World" data-max-options="1">
                <option value="World" selected="selected">All Countries</option>
            </optgroup>
            <optgroup label="Countries" data-max-options="2">
                @foreach (var c in countries)
                {
                    <option>@c</option>
                }
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnFilterType">
            <optgroup label="Report Type">
                <option value="c">Cummulative</option>
                <option value="d">Cases by Day</option>
                <option value="a">Active Cases</option>
                <option value="e">Infected Estimate</option>
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnEstimateRange" data-width="fit">
            <optgroup label="Range in Days">
                @for (var i = 5; i < 21; i++)
                {
                    <option>@i</option>
                }
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnEstimatePercent" data-width="fit">
            <optgroup label="Death Rate %">
                @for (var i = 1.0; i < 5.1; i+=0.1)
                {
                    <option>@i.ToString("0.0")</option>
                }
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnFilterLine">
            <optgroup label="Data to Display">
                <option value="infected">Infected</option>
                <option value="lost">Lost</option>
                <option value="active">Active Cases</option>
            </optgroup>
        </select>
    </div>
    <div class="form_element" data-toggle="tooltip" data-placement="bottom" title="Date Type">
        <select id="bnFilterDate">
            <optgroup label="Date Type">
                <option value="date">Calendar</option>
                <option value="pandemic">Pandemic</option>
            </optgroup>
        </select>
    </div>
    <div class="form_element">
        <select id="bnFilterAdjust">
            <optgroup label="Case Adjust">
                <option>1</option>
                <option>10</option>
                <option>50</option>
                <option selected>100</option>
                <option>500</option>
                <option>1000</option>
            </optgroup>
        </select>
    </div>
    <div class="btn-group" id="bnGroupLabel">
        <button id="bnHideAll" class="btn btn-light">Hide</button>
        <button id="bnShowAll" class="btn btn-light">Show</button>
        <button id="bnLegend" class="btn btn-info">Toggle</button>
    </div>
    <div style="display:flex; flex-grow:1; flex-direction:row-reverse">
        <a href="/privacy" class="btn btn-link" style="">Info</a>
    </div>
</div>


    @section Scripts {
        <script src="~/lib/hc/highcharts.js"></script>
        <script src="~/lib/hc/highcharts-more.js"></script>
        <script src="~/lib/hc/modules/exporting.js"></script>
        <script>
            var chart = null,
                vSeries = [],
                _hash = null;

            function loadData(filter, range, adjust) {
                if (chart != null) {
                    vSeries = [];
                    for (var i = 0; i < chart.series.length; i++) {
                        vSeries[chart.series[i].name] = chart.series[i].visible;
                    }
                }
                $.post('/AllData', { field: filter, range: range, adjust: adjust }, function (result) {
                    for (var i = 0; i < result.length; i++) {
                        result[i].visible = vSeries[result[i].name];
                    }


                    chart = Highcharts.chart('container', {
                        chart: {
                            type: 'spline'
                        },
                        //boost: {
                        //    enabled: false,
                        //    usePreallocated: true,
                        //    useAlpha: false
                        //},
                        title: {
                            text: 'COVID-19 Distribution'
                        },
                        xAxis: {
                            type: range == 'pandemic' ? 'linear' : 'datetime',
                            dateTimeLabelFormats: {
                                month: '%e. %b',
                                year: '%b'
                            },
                            title: {
                                text: 'Date'
                            }
                        },
                        yAxis: [{
                            title: {
                                text: 'Cases'
                            }
                            , type: $("#bnFilterScale").val()
                            //, min: 0
                        }],

                        legend: {
                            layout: 'vertical',
                            align: 'right',
                            verticalAlign: 'middle'
                        },

                        tooltip: {
                            headerFormat: '<b>{series.name}</b><br>',
                            pointFormat: range == 'pandemic' ? 'Day {point.x}: {point.y:#,##0f}' : '{point.x:%e. %b}: {point.y:#,##0f}'
                        },

                        plotOptions: {
                            series: {
                                marker: {
                                    enabled: false
                                }
                            }
                        },

                        series: result,

                        responsive: {
                            rules: [{
                                condition: {
                                    maxWidth: 500
                                },
                                chartOptions: {
                                    legend: {
                                        layout: 'horizontal',
                                        align: 'center',
                                        verticalAlign: 'bottom'
                                    }
                                }
                            }]
                        }

                    });
                });
            }

            function loadCountry() {

                var filter = $("#bnFilterType").val(),
                    cntry = $("#bnFilterCountry").val(),
                    p = $("#bnEstimateRange").val(),
                    r = $("#bnEstimatePercent").val();

                if (filter == "e") {
                    $("#bnEstimateRange").closest(".form_element").show();
                    $("#bnEstimatePercent").closest(".form_element").show();
                } else {
                    $("#bnEstimateRange").closest(".form_element").hide();
                    $("#bnEstimatePercent").closest(".form_element").hide();
                }

                $.post('/CountryData', { country: cntry, type: filter, r: r, p: p }, function (result) {
                    //check if the series contains an estimate
                    var plotBands = [],
                        has2Axis = false,
                        yAxisConfig = [];
                    for (var i = 0; i < result.series.length; i++) {
                        if (result.series[i].name == 'Estimate Infected') {
                            plotBands = [{
                                label: {
                                    text: 'Estimate'
                                },
                                color: '#f0f0f0',
                                from: result.series[i].data[0][0] - 56400000, // Start of the plot band
                                to: result.series[i].data[result.series[i].data.length - 1][0] + 76400000 // End of the plot band
                            }];
                        }
                        if (result.series[i].yAxis > 0) {
                            has2Axis = true;
                        }
                    };
                    var yAxis0 = {
                        title: {
                            text: 'Cases'
                        },
                        type: $("#bnFilterScale").val()
                        //, min: 0
                    };
                    yAxis1 = {
                        title: {
                            text: 'Multiplier by 4 days'
                        }, min: 0,
                        labels: {
                            style: {
                                color: Highcharts.getOptions().colors[0]
                            }
                        },
                        opposite: true,
                        plotLines: [{
                            color: Highcharts.getOptions().colors[0],
                            width: 1,
                            value: 1,
                            label: {
                                text: 'No more new cases'
                            }
                        }]
                    };
                    yAxisConfig.push(yAxis0);
                    if (has2Axis) {
                        yAxisConfig.push(yAxis1);
                    }
                    
                    chart = Highcharts.chart('container', {
                        chart: {
                            zoomType: 'xy'
                        },
                        title: {
                            text: 'COVID-19 Distribution - ' + filter
                        },
                        xAxis: {
                            type: 'datetime',
                            dateTimeLabelFormats: { // don't display the dummy year
                                month: '%e. %b',
                                year: '%b'
                            },
                            title: {
                                text: 'Date'
                            },
                            plotBands: plotBands,
                            plotLines: result.lines
                        },
                        yAxis: yAxisConfig,
                        legend: {
                            layout: 'vertical',
                            align: 'right',
                            verticalAlign: 'middle'
                        },

                        tooltip: {
                            headerFormat: '<b>{series.name}</b><br>',
                            pointFormat: '{point.x:%e. %b}: {point.y:#,##0f}'
                        },


                        series: result.series,

                        responsive: {
                            rules: [{
                                condition: {
                                    maxWidth: 500
                                },
                                chartOptions: {
                                    legend: {
                                        layout: 'horizontal',
                                        align: 'center',
                                        verticalAlign: 'bottom'
                                    }
                                }
                            }]
                        }

                    });
                });
            }


            $(function () {

                $("#bnFilterAdjust").closest(".form_element").hide();
                $("#bnFilterType").closest(".form_element").hide();
                $("#bnEstimateRange").val("14").closest(".form_element").hide();
                $("#bnEstimatePercent").val("1.5").closest(".form_element").hide();

                $("#bnLegend").on("click", function () {
                    chart.update({
                        legend: {
                            enabled: !chart.legend.display
                        }
                    });
                });

                $("#bnHideAll").on("click", function () {
                    const hideAll = function (i) {
                        window.setTimeout(function () {
                            if (i < chart.series.length) {
                                chart.series[i].hide();
                                hideAll(++i);
                            }
                        }, 50);
                    }
                    hideAll(0);
                });
                $("#bnShowAll").on("click", function () {
                    const showAll = function (i) {
                        window.setTimeout(function () {
                            if (i < chart.series.length) {
                                chart.series[i].show();
                                showAll(++i);
                            }
                        }, 50);
                    }
                    showAll(0);
                });

                $("#bnFilterLine").on("change", function () {
                    loadData($(this).val(), $("#bnFilterDate").val());
                });

                $("#bnFilterDate").on("change", function () {
                    var val = $("#bnFilterDate").val();
                    if (val == "date") {
                        $("#bnFilterAdjust").closest(".form_element").hide();
                    } else {
                        $("#bnFilterAdjust").closest(".form_element").show();
                    }
                    loadData($("#bnFilterLine").val(), val, $("#bnFilterAdjust").val());
                });

                $("#bnFilterAdjust").on("change", function () {
                    loadData($("#bnFilterLine").val(), $("#bnFilterDate").val(), $("#bnFilterAdjust").val());
                });

                $("#bnFilterType,#bnEstimateRange,#bnEstimatePercent").on("change", function () {
                    loadCountry();
                });

                $("#bnFilterScale").on("change", function () {
                    var type = $(this).val();
                    chart.update({
                        yAxis: [{
                            type: type
                        }, {}]
                    });
                });

                $("#bnFilterCountry").on("change", function () {
                    _hash = $(this).val();
                    window.location.hash = _hash;
                    if (_hash == "World") {
                        $("#bnFilterLine").closest(".form_element").show();
                        $("#bnFilterDate").closest(".form_element").show();
                        if ($("#bnFilterDate").val() == 'date') {
                            $("#bnFilterAdjust").closest(".form_element").hide();
                        } else {
                            $("#bnFilterAdjust").closest(".form_element").show();
                        }
                        $("#bnFilterType").closest(".form_element").hide();
                        loadData($("#bnFilterLine").val(), $("#bnFilterDate").val(), $("#bnFilterAdjust").val());
                    } else {
                        $("#bnFilterLine").closest(".form_element").hide();
                        $("#bnFilterDate").closest(".form_element").hide();
                        $("#bnFilterAdjust").closest(".form_element").hide();
                        $("#bnFilterType").closest(".form_element").show();
                        loadCountry();
                    }
                });

                $("select").selectpicker();

                if (window.location.hash) {
                    _hash = window.location.hash.substring(1);
                    $("#bnFilterCountry").val(_hash).trigger("change");
                } else {
                    loadData('infected', 'date', 100);
                }
            });

            window.onhashchange = function () {
                var hash = window.location.hash.substring(1);
                if (hash != _hash) {
                    _hash = hash;
                    $("#bnFilterCountry").val(_hash).trigger("change");
                }
            }
        </script>
    }
